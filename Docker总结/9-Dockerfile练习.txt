自定义镜像
1.编写dockerfile
2.构建  —— docker build  -t 镜像名字:TAG
3.运行  —— docker run -it 镜像名字:TAG
4.列出镜像的变更历史  —— docker history 镜像名

下面以自定义tomcat9为例
1.新建目录 —— mkdir -p /chen/mydockerfile/tomcat9
2.在上述目录下建文件 —— touch c.txt
3.将jdk和tomcat安装的压缩包拷贝进上一个目录 —— apache-tomcat-9.08.tar.gz  /  jdk-8u171-linux-x64.tar.gz
4.在/chen/mydockerfile/tomcat9目录下新建Dockerfile文件，编写dockerfile
5.构建
6.运行
7.验证

dockerfile文件如下
FROM centos
MAINTAINER chen<hanyu@126.com>
# 将宿主机当前c.txt文件拷贝到容器/usr/local路径下
COPY c.txt /usr/local/cincontainer.txt
# 把java与tomcat添加到容器中
ADD jdk-8u171-linux-x64.tar.gz /usr/local/
ADD apache-tomcat-9.08.tar.gz /usr/local/
# 安装vim编辑器
RUN yum -y install vim
# 设置工作访问时候的WORKDIR路径，登录落脚点
ENV MYPATH /usr/local
WORKDIR $MYPATH
# 配置java与tomcat的环境变量
ENV JAVA_HOME /usr/local/jdk1.8.0_171
ENV CLASSPATH $JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar
ENV CATALINA_HOME /usr/local/apache-tomcat-9.0.8
ENV CATALINA_BASE /usr/local/apache-tomcat-9.0.8
ENV PATH $PATH:$JAVA_HOME/bin:$CATALINA_HOME/lib:$CATALINA_HOME/bin
# 容器运行时监听端口
EXPOSE 8080
# 启动时运行的tomcat
# ENTRYPOINT ["/usr/local/apache-tomcat-9.0.8/bin/startup.sh"]
CMD /usr/local/apache-tomcat-9.0.8/bin/startup.sh && tail -F /usr/local/apache-tomcat-9.0.8/bin/logs/catalina.out

运行指令如下
docker run -d -p 8080:8080 --name mytm9
-v /chen/mydockerfile/tomcat9/test:/usr/local/apache-tomcat-9.0.8/webapps/test
-v /chen/mydockerfile/tomcat9/tomcat9logs/:/usr/local/apache-tomcat-9.0.8/logs
--privileged=true
mytomcat9
