中间件

获取浏览器端的ip地址
使用request对象的META属性：
request.META['REMOTE_ADDR']

使用中间件
1、在应用下新建middleware.py文件
2、定义中间类：
class BlockIpsMiddleware(objects):
    exclude_ip = ['IP地址名']
    
    # 在调用每一个视图函数前，先调用中间件, 中间件的函数名必须为此，包含的参数也必须这么多
    def process_view(self, request, view_func, *view_args, **view_kwargs):
        # 获取ip地址
        user_ip = request.META['REMOTE_ADDR']
        if user_ip in BlockIpsMiddleware.exclude_ip:
	return HttpResponse('<h1>Forbidden</h1>')

在类中定义中间件预留函数：
__init__：服务器响应第一个请求的时候调用，只在响应一次
process_request：在产生request对象，进行url匹配之前调用
process_view：在url匹配之后，调用视图函数之前
process_response：视图函数调用之后，返回内容给浏览器之前
注：这些函数，可以在需要时返回，直接调用了process_response函数
process_exception：视图函数出现异常时调用
如果注册的多个中间件类包含process_exception函数时，调用的顺序跟注册的顺序是相反的

注册中间件类：
在项目下的setting.py中的MIDDLEWARE_CLASSES中（django2.0版本写为MIDDLEWARE）

