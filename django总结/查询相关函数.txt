查询的相关函数

get：返回一条且只能是一条数据，返回值是一个对象，参数可以写成查询条件
all：返回模型类对应表的所有数据，返回值是QuerySet
filter：过滤，返回满足条件的数据，返回值是QuerySet，参数可写查询条件
exclude：返回不满足条件的数据，参数可写查询条件
order_by：对查询结果进行排序，返回值时QuerySet，参数可写排序的字段

注意：
  1.get，filter，exclude函数中可以写查询条件，如果传入多个参数，条件之间代表且的关系
  2.all，filter，exclude，order_by函数的返回值时QuerySet类的实例对象，叫作查询集

from django.db.models import F,Q,Count,Avg,Max,Min

F对象：用于类对象之间的比较
例如：查询图书阅读量大于评论量的书
BookInfo.objects.filter(bread__gt=F('bcomment'))

Q对象：用于查询时条件之间的逻辑关系
例如：查询id大于3或者阅读量大于30的图书信息
BookInfo.objects,filter(Q(id__gt=3)|Q(bread__gt=30))

aggregate: 进行聚合操作，返回值是一个字典，进行聚合的时候需要先导入聚合类
count：返回结果是集中数据的数目，返回值是一个数字

注意： 对一个QuerySet实例对象，可以继续调用上面所有的函数

查询集
查询集特性
1）惰性查询：只有在实际使用查询集中的数据的时候才会发生对数据库的真正查询
2）缓存：当使用的是同一个查询集时，第一次的时候发生实际数据库的查询，然后把结果缓存起来，下次在使用这个
查询集时，他读取的是缓存中的结果

限制查询集
可以对一个查询集进行去下标或者切片的操作来限制查询集的结果
对一个查询集进行切片操作产生的是一个新的查询集，下标不允许为负值
b[0]   ----- 如果不存在抛出IndexError异常
b[0:1].get() -----  不存在，抛出DoesNotExist异常

exists：判断一个查询集中是否有数据，返回值为True，False

